<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Matrice Pr√©-qualification Fournisseurs</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 1.8em;
            margin-bottom: 10px;
        }

        .controls {
            padding: 20px 30px;
            background: #f8f9fa;
            border-bottom: 2px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 15px;
        }

        .add-supplier {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }

        .add-supplier:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
        }

        .save-load-buttons {
            display: flex;
            gap: 10px;
        }

        .save-btn {
            background: linear-gradient(135deg, #fd7e14 0%, #e8590c 100%);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .load-btn {
            background: linear-gradient(135deg, #6f42c1 0%, #5a2d82 100%);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .export-btn {
            background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .filters {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .filter-btn {
            padding: 8px 16px;
            border: 2px solid #dee2e6;
            background: white;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9em;
        }

        .filter-btn.active {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

        .stats {
            display: flex;
            gap: 15px;
            font-weight: 600;
        }

        .stat-item {
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.9em;
            min-width: 80px;
            text-align: center;
        }

        .stat-qualified { background: #d4edda; color: #155724; }
        .stat-tolerable { background: #fff3cd; color: #856404; }
        .stat-eliminated { background: #f8d7da; color: #721c24; }

        .matrix-container {
            padding: 0;
            overflow-x: auto;
            max-height: 70vh;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            font-size: 0.85em;
        }

        th {
            background: linear-gradient(135deg, #495057 0%, #6c757d 100%);
            color: white;
            padding: 12px 8px;
            text-align: center;
            font-weight: 600;
            border-right: 1px solid rgba(255,255,255,0.2);
            position: sticky;
            top: 0;
            z-index: 10;
            font-size: 0.8em;
            line-height: 1.2;
        }

        th:first-child {
            position: sticky;
            left: 0;
            z-index: 11;
            min-width: 180px;
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        }

        .criterion-header {
            writing-mode: vertical-rl;
            text-orientation: mixed;
            width: 60px;
            min-width: 60px;
            max-width: 60px;
            height: 120px;
        }

        td {
            padding: 8px;
            text-align: center;
            border: 1px solid #dee2e6;
            position: relative;
            min-width: 60px;
        }

        .supplier-name {
            background: #f8f9fa;
            font-weight: 600;
            text-align: left !important;
            position: sticky;
            left: 0;
            z-index: 5;
            min-width: 180px;
            border-right: 2px solid #dee2e6;
            padding: 8px 12px;
        }

        .supplier-input {
            width: 100%;
            border: none;
            background: transparent;
            font-weight: 600;
            font-size: 0.9em;
            padding: 4px;
        }

        select.criterion-select {
            width: 100%;
            padding: 4px;
            border: none;
            background: transparent;
            font-size: 0.8em;
            font-weight: 600;
            cursor: pointer;
        }

        .score-cell {
            font-weight: bold;
            font-size: 1em;
            min-width: 80px;
        }

        .status-cell {
            font-weight: bold;
            font-size: 0.9em;
            min-width: 100px;
        }

        .status-QUALIFIED {
            background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
            color: #155724;
        }

        .status-TOLERABLE {
            background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
            color: #856404;
        }

        .status-ELIMINATED {
            background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
            color: #721c24;
        }

        .criterion-eliminatory { 
            background: rgba(255, 235, 238, 0.5);
            border-left: 4px solid #f44336;
        }

        .criterion-qualifying { 
            background: rgba(243, 229, 245, 0.3);
            border-left: 4px solid #9c27b0;
        }

        .value-NO { 
            background: #ffcdd2; 
            color: #c62828; 
            font-weight: 600;
        }

        .value-TOLERABLE { 
            background: #ffe0b2; 
            color: #ef6c00; 
            font-weight: 600;
        }

        .value-YES { 
            background: #c8e6c9; 
            color: #2e7d32; 
            font-weight: 600;
        }

        .value-NA {
            background: #e9ecef;
            color: #6c757d;
            font-weight: 600;
        }

        .delete-btn {
            background: #dc3545;
            color: white;
            border: none;
            padding: 2px 6px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 0.7em;
            margin-left: 8px;
        }

        .delete-btn:hover {
            background: #c82333;
        }

        .legend {
            padding: 20px 30px;
            background: #f8f9fa;
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 20px;
            font-size: 0.9em;
        }

        .legend-section {
            flex: 1;
            min-width: 300px;
        }

        .legend-title {
            font-weight: 600;
            margin-bottom: 10px;
            color: #495057;
        }

        .legend-item {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            gap: 10px;
        }

        .legend-color {
            width: 20px;
            height: 20px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .file-input {
            display: none;
        }

        .auto-save-indicator {
            color: #28a745;
            font-size: 0.8em;
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Matrice de Qualification Fournisseurs</h1>
            <p>Version avec sauvegarde automatique</p>
        </div>

        <div class="controls">
            <div>
                <button class="add-supplier" onclick="addSupplier()">‚ûï Ajouter Fournisseur</button>
                <span class="auto-save-indicator" id="save-indicator">üíæ Sauvegarde auto</span>
            </div>

            <div class="save-load-buttons">
                <button class="save-btn" onclick="saveToFile()">üíæ Sauvegarder</button>
                <button class="load-btn" onclick="document.getElementById('loadFile').click()">üìÅ Charger</button>
                <input type="file" id="loadFile" class="file-input" accept=".json" onchange="loadFromFile(event)">
                <button class="export-btn" onclick="exportToExcel()">üìä Export Excel</button>
            </div>
            
            <div class="filters">
                <button class="filter-btn active" onclick="filterSuppliers('all')">Tous</button>
                <button class="filter-btn" onclick="filterSuppliers('QUALIFIED')">Qualifi√©s</button>
                <button class="filter-btn" onclick="filterSuppliers('TOLERABLE')">Tol√©rables</button>
                <button class="filter-btn" onclick="filterSuppliers('ELIMINATED')">√âlimin√©s</button>
            </div>

            <div class="stats">
                <div class="stat-item stat-qualified">
                    <div>QUALIFI√âS</div>
                    <div id="qualified-count">0</div>
                </div>
                <div class="stat-item stat-tolerable">
                    <div>TOL√âRABLES</div>
                    <div id="tolerable-count">0</div>
                </div>
                <div class="stat-item stat-eliminated">
                    <div>√âLIMIN√âS</div>
                    <div id="eliminated-count">0</div>
                </div>
            </div>
        </div>

        <div class="matrix-container">
            <table id="matrix-table">
                <thead>
                    <tr>
                        <th>Nom Fournisseur</th>
                        <th class="criterion-header criterion-eliminatory">Capacit√© Production (si applicable)</th>
                        <th class="criterion-header criterion-eliminatory">Type d'Acier</th>
                        <th class="criterion-header criterion-eliminatory">Certifications EU</th>
                        <th class="criterion-header criterion-eliminatory">Export/Clients EU</th>
                        <th class="criterion-header criterion-eliminatory">Communication Anglais</th>
                        <th class="criterion-header criterion-eliminatory">Stabilit√© Financi√®re (si applicable)</th>
                        <th class="criterion-header criterion-qualifying">Taille Entreprise</th>
                        <th class="criterion-header criterion-qualifying">Anciennet√©</th>
                        <th class="criterion-header criterion-qualifying">Galvanisation</th>
                        <th class="criterion-header criterion-qualifying">R√©f√©rences Clients Internationaux</th>
                        <th>Score</th>
                        <th>Statut Final</th>
                    </tr>
                </thead>
                <tbody id="matrix-body">
                </tbody>
            </table>
        </div>

        <div class="legend">
            <div class="legend-section">
                <div class="legend-title">üìä CRIT√àRES DE NOTATION</div>
                <div class="legend-item">
                    <div class="legend-color" style="background: #ffcdd2;"></div>
                    <span><strong>√âliminatoires:</strong> NON=0, TOLERABLE=0, OUI=0, N/A=0</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background: #e9ecef;"></div>
                    <span><strong>Qualifiants:</strong> NON=-1, TOLERABLE=0, OUI=+1</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background: #c8e6c9;"></div>
                    <span><strong>Type d'Acier:</strong> NON=0, TOLERABLE=+1, OUI=+2</span>
                </div>
            </div>
            <div class="legend-section">
                <div class="legend-title">üéØ R√âSULTATS FINAUX</div>
                <div class="legend-item">
                    <div class="legend-color" style="background: #d4edda;"></div>
                    <span><strong>QUALIFI√â:</strong> Aucun "NON" √©liminatoire + Score ‚â•4</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background: #fff3cd;"></div>
                    <span><strong>TOL√âRABLE:</strong> Aucun "NON" √©liminatoire + Score 0-3</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background: #f8d7da;"></div>
                    <span><strong>√âLIMIN√â:</strong> Au moins un "NON" √©liminatoire</span>
                </div>
            </div>
        </div>
    </div>

    <script>
        let suppliers = [];
        let currentFilter = 'all';

        // NOUVEAUX CRIT√àRES SELON VOS DEMANDES
        const eliminatoryCriteria = [
            'capacity',      // Capacit√© production (si applicable)
            'steelType',     // Type d'acier (remplace steel manufacturing)
            'certifications', // Certifications EU
            'export',        // Export/Clients EU
            'communication', // Communication Anglais
            'financial'      // Stabilit√© financi√®re (si applicable)
        ];

        const qualifyingCriteria = [
            'size',          // Taille entreprise
            'seniority',     // Anciennet√©
            'galvanization', // Galvanisation
            'references'     // R√©f√©rences clients internationaux
            // Location retir√© selon vos demandes
        ];

        // Auto-sauvegarde toutes les 30 secondes
        setInterval(autoSave, 30000);

        function autoSave() {
            if (suppliers.length > 0) {
                const data = {
                    suppliers: suppliers,
                    timestamp: new Date().toISOString()
                };
                
                // Simulation de sauvegarde (en r√©alit√©, stockage temporaire)
                window.tempSaveData = data;
                
                const indicator = document.getElementById('save-indicator');
                indicator.textContent = 'üíæ Sauvegard√© ' + new Date().toLocaleTimeString();
                indicator.style.color = '#28a745';
                
                setTimeout(() => {
                    indicator.textContent = 'üíæ Sauvegarde auto';
                    indicator.style.color = '#6c757d';
                }, 2000);
            }
        }

        function saveToFile() {
            const data = {
                suppliers: suppliers,
                timestamp: new Date().toISOString(),
                version: "2.0"
            };
            
            const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', `supplier_matrix_${new Date().toISOString().split('T')[0]}.json`);
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            alert('‚úÖ Matrice sauvegard√©e ! Gardez ce fichier pour restaurer vos donn√©es.');
        }

        function loadFromFile(event) {
            const file = event.target.files[0];
            if (!file) return;
            
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const data = JSON.parse(e.target.result);
                    if (data.suppliers && Array.isArray(data.suppliers)) {
                        suppliers = data.suppliers;
                        renderMatrix();
                        updateStats();
                        alert('‚úÖ Donn√©es charg√©es avec succ√®s !');
                    } else {
                        alert('‚ùå Format de fichier invalide');
                    }
                } catch (error) {
                    alert('‚ùå Erreur lors du chargement du fichier');
                }
            };
            reader.readAsText(file);
        }

        function addSupplier() {
            const supplierName = prompt("Nom du fournisseur:");
            if (!supplierName) return;

            const newSupplier = {
                id: Date.now(),
                name: supplierName,
                capacity: 'TOLERABLE',
                steelType: 'TOLERABLE',
                certifications: 'TOLERABLE',
                export: 'TOLERABLE',
                communication: 'TOLERABLE',
                financial: 'TOLERABLE',
                size: 'TOLERABLE',
                seniority: 'TOLERABLE',
                galvanization: 'TOLERABLE',
                references: 'TOLERABLE'
            };

            suppliers.push(newSupplier);
            renderMatrix();
            updateStats();
        }

        function deleteSupplier(id) {
            if (confirm("Supprimer ce fournisseur ?")) {
                suppliers = suppliers.filter(s => s.id !== id);
                renderMatrix();
                updateStats();
            }
        }

        function updateCriterion(supplierId, criterion, value) {
            const supplier = suppliers.find(s => s.id === supplierId);
            if (supplier) {
                supplier[criterion] = value;
                renderMatrix();
                updateStats();
            }
        }

        function calculateScore(supplier) {
            // V√©rifier les crit√®res √©liminatoires
            for (let criterion of eliminatoryCriteria) {
                if (supplier[criterion] === 'NO') {
                    return { score: 0, status: 'ELIMINATED', reason: 'Crit√®re √©liminatoire' };
                }
            }

            // Calculer le score des crit√®res qualifiants
            let score = 0;
            
            // Type d'acier : scoring sp√©cial selon vos demandes
            switch (supplier.steelType) {
                case 'NO': score += 0; break;
                case 'TOLERABLE': score += 1; break;
                case 'YES': score += 2; break;
                case 'NA': score += 0; break;
            }
            
            // Autres crit√®res qualifiants : NON=-1, TOLERABLE=0, OUI=+1
            for (let criterion of qualifyingCriteria) {
                switch (supplier[criterion]) {
                    case 'NO': score -= 1; break;
                    case 'TOLERABLE': score += 0; break;
                    case 'YES': score += 1; break;
                    case 'NA': score += 0; break;
                }
            }

            // D√©terminer le statut final
            let status = score >= 4 ? 'QUALIFIED' : 'TOLERABLE';
            
            return { score, status, reason: '' };
        }

        function renderMatrix() {
            const tbody = document.getElementById('matrix-body');
            tbody.innerHTML = '';

            const filteredSuppliers = currentFilter === 'all' 
                ? suppliers 
                : suppliers.filter(s => calculateScore(s).status === currentFilter);

            filteredSuppliers.forEach(supplier => {
                const result = calculateScore(supplier);
                const row = document.createElement('tr');
                
                row.innerHTML = `
                    <td class="supplier-name">
                        <input type="text" class="supplier-input" value="${supplier.name}" 
                               onchange="updateSupplierName(${supplier.id}, this.value)">
                        <button class="delete-btn" onclick="deleteSupplier(${supplier.id})">‚úï</button>
                    </td>
                    ${eliminatoryCriteria.map(criterion => {
                        let options = '<option value="NO">NON</option><option value="TOLERABLE">TOL√âRABLE</option><option value="YES">OUI</option>';
                        if (criterion === 'capacity' || criterion === 'financial') {
                            options += '<option value="NA">N/A</option>';
                        }
                        return `
                        <td class="criterion-eliminatory">
                            <select class="criterion-select value-${supplier[criterion]}" 
                                    onchange="updateCriterion(${supplier.id}, '${criterion}', this.value)">
                                ${options.replace(`value="${supplier[criterion]}"`, `value="${supplier[criterion]}" selected`)}
                            </select>
                        </td>
                    `}).join('')}
                    ${qualifyingCriteria.map(criterion => `
                        <td class="criterion-qualifying">
                            <select class="criterion-select value-${supplier[criterion]}" 
                                    onchange="updateCriterion(${supplier.id}, '${criterion}', this.value)">
                                <option value="NO" ${supplier[criterion] === 'NO' ? 'selected' : ''}>NON</option>
                                <option value="TOLERABLE" ${supplier[criterion] === 'TOLERABLE' ? 'selected' : ''}>TOL√âRABLE</option>
                                <option value="YES" ${supplier[criterion] === 'YES' ? 'selected' : ''}>OUI</option>
                                <option value="NA" ${supplier[criterion] === 'NA' ? 'selected' : ''}>N/A</option>
                            </select>
                        </td>
                    `).join('')}
                    <td class="score-cell">${result.score}</td>
                    <td class="status-cell status-${result.status}">${result.status}</td>
                `;

                tbody.appendChild(row);
            });
        }

        function updateSupplierName(id, newName) {
            const supplier = suppliers.find(s => s.id === id);
            if (supplier) {
                supplier.name = newName;
            }
        }

        function filterSuppliers(filter) {
            currentFilter = filter;
            
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            renderMatrix();
        }

        function updateStats() {
            const stats = {
                'QUALIFIED': 0,
                'TOLERABLE': 0,
                'ELIMINATED': 0
            };

            suppliers.forEach(supplier => {
                const result = calculateScore(supplier);
                stats[result.status]++;
            });

            document.getElementById('qualified-count').textContent = stats['QUALIFIED'];
            document.getElementById('tolerable-count').textContent = stats['TOLERABLE'];
            document.getElementById('eliminated-count').textContent = stats['ELIMINATED'];
        }

        function exportToExcel() {
            // Export CSV optimis√© pour Excel
            let csv = 'ID_Fournisseur,Nom_Fournisseur,Capacite_Production,Type_Acier,Certifications_EU,Export_EU,Communication_Anglais,Stabilite_Financiere,Taille_Entreprise,Anciennete,Galvanisation,References_Internationales,Score_Total,Statut_Final,Date_Export\n';
            
            suppliers.forEach(supplier => {
                const result = calculateScore(supplier);
                csv += [
                    supplier.id,
                    `"${supplier.name}"`,
                    supplier.capacity,
                    supplier.steelType,
                    supplier.certifications,
                    supplier.export,
                    supplier.communication,
                    supplier.financial,
                    supplier.size,
                    supplier.seniority,
                    supplier.galvanization,
                    supplier.references,
                    result.score,
                    result.status,
                    new Date().toISOString().split('T')[0]
                ].join(',') + '\n';
            });

            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', `matrice_fournisseurs_${new Date().toISOString().split('T')[0]}.csv`);
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // Initialiser avec un exemple
        function initializeExample() {
            suppliers.push({
                id: Date.now(),
                name: "Exemple Fournisseur",
                capacity: 'YES',
                steelType: 'YES',
                certifications: 'YES',
                export: 'YES',
                communication: 'YES',
                financial: 'NA',
                size: 'YES',
                seniority: 'YES',
                galvanization: 'YES',
                references: 'YES'
            });

            renderMatrix();
            updateStats();
        }

        // D√©marrer avec un exemple
        initializeExample();

        // Sauvegarder avant fermeture
        window.addEventListener('beforeunload', function(e) {
            if (suppliers.length > 0) {
                autoSave();
                e.preventDefault();
                e.returnValue = 'Vous avez des donn√©es non sauvegard√©es. Voulez-vous vraiment quitter ?';
            }
        });
    </script>
</body>
</html>
